// src/services/agentEstructurador.js
import openai from './openaiClient.js';

export const agentEstructuradorIA = {
  analizarEstructura: async (especialidad, modelo, consulta) => {
    const prompt = `Eres un EXPERTO ANALISTA DE ESTRUCTURAS DE PROMPTS con conocimiento profundo y actualizado de todos los modelos de IA y sus caracter√≠sticas espec√≠ficas, limitaciones y fortalezas.

MISI√ìN CR√çTICA: Analizar exhaustivamente la consulta del usuario y dise√±ar la estructura de prompt m√°s efectiva y optimizada para el modelo de IA seleccionado.

DATOS DE ENTRADA:
ESPECIALIDAD: ${especialidad}
MODELO OBJETIVO: ${modelo}
CONSULTA DEL USUARIO: "${consulta}"

CONOCIMIENTO AVANZADO Y ACTUALIZADO DE MODELOS IA:

ü§ñ GPT-4 / GPT-4o (OpenAI):
- Ventana de contexto: 128k tokens
- Arquitectura: Transformer multimodal avanzado (texto, imagen, audio)
- Fortalezas √öNICAS: Razonamiento l√≥gico superior, coherencia excepcional, programaci√≥n avanzada, seguimiento de instrucciones complejas multinivel
- Limitaciones CR√çTICAS: Alto costo por token ($0.03-0.06/1k), velocidad moderada, tendencia a "alucinar" datos espec√≠ficos
- Estructura √ìPTIMA: System/User messages claros + instrucciones paso a paso numeradas + ejemplos espec√≠ficos + validaciones
- Formato PREFERIDO: Rol definido + Contexto detallado + Tarea espec√≠fica + Ejemplos concretos + Formato de salida + Restricciones

üß† Claude 3 Opus (Anthropic):
- Ventana de contexto: 200k tokens (ideal para an√°lisis extensos y documentos largos)
- Fortalezas √öNICAS: Comprensi√≥n contextual excepcional, tareas complejas multipasos, respuestas √©ticas y seguras, an√°lisis profundo
- Limitaciones CR√çTICAS: Menos creativo que GPT, API m√°s compleja, puede ser excesivamente conservador
- Estructura √ìPTIMA: XML tags estructurados + jerarqu√≠a clara + contexto narrativo extenso
- Formato PREFERIDO: <rol></rol> + <contexto></contexto> + <tarea></tarea> + <ejemplos></ejemplos> + <formato></formato>

ü¶ô Llama 3 (Meta):
- Ventana de contexto: 8k tokens (CR√çTICO: extremadamente limitada)
- Fortalezas √öNICAS: C√≥digo abierto, personalizable, buen razonamiento matem√°tico, costo-efectivo
- Limitaciones CR√çTICAS: Contexto muy peque√±o, rendimiento variable, requiere instrucciones ultra-espec√≠ficas
- Estructura √ìPTIMA: Formato ultra-conciso, eliminaci√≥n de redundancias, instrucciones directas
- Formato PREFERIDO: ### Instrucci√≥n: [directa] ### Contexto: [m√≠nimo] ### Tarea: [espec√≠fica] ### Respuesta:

üíé Gemini 1.5 Pro (Google):
- Ventana de contexto: 1 MILL√ìN de tokens (capacidad masiva sin precedentes)
- Arquitectura: Mixture-of-Experts (MoE) multimodal extremo (texto, imagen, audio, video, documentos)
- Fortalezas √öNICAS: Extremadamente eficiente, velocidad superior, an√°lisis de archivos enormes, datos actualizados
- Limitaciones CR√çTICAS: Puede ser superficial sin instrucciones de profundidad espec√≠ficas
- Estructura √ìPTIMA: Markdown estructurado + aprovechamiento de contexto masivo + instrucciones de profundidad
- Formato PREFERIDO: Conversacional + markdown + contexto extenso + ejemplos m√∫ltiples

üî¨ DeepSeek:
- Fortalezas √öNICAS: Razonamiento cient√≠fico avanzado, an√°lisis matem√°tico preciso, precisi√≥n t√©cnica extrema
- Limitaciones CR√çTICAS: Menos creativo, enfoque muy literal, dificultad con tareas abstractas
- Estructura √ìPTIMA: Lenguaje t√©cnico claro + datos concretos + metodolog√≠a paso a paso + validaci√≥n num√©rica
- Formato PREFERIDO: Rol t√©cnico + problema bien definido + metodolog√≠a + datos + ejemplos num√©ricos

AN√ÅLISIS EXHAUSTIVO REQUERIDO:
Bas√°ndote en la especialidad "${especialidad}" y el modelo "${modelo}", debes realizar un an√°lisis profundo y determinar:
- Fortalezas: C√≥digo abierto, personalizable, buen razonamiento
- Limitaciones: Contexto peque√±o, rendimiento variable
- Estructura preferida: Instrucciones muy espec√≠ficas, formato ### Instrucci√≥n: ### Contexto: ### Respuesta:

Gemini 1.5 Pro (Google):
1. ESTRUCTURA IDEAL ESPEC√çFICA para maximizar el rendimiento del modelo elegido
2. ELEMENTOS CR√çTICOS que debe contener obligatoriamente el prompt
3. NIVEL DE COMPLEJIDAD apropiado para la tarea y modelo
4. NECESIDAD DE EJEMPLOS y tipo de contexto especializado requerido
5. FORMATO √ìPTIMO de salida considerando las capacidades del modelo
6. CONSIDERACIONES ESPEC√çFICAS del modelo (tokens, velocidad, costo, limitaciones)
7. ESTRATEGIAS AVANZADAS para evitar limitaciones conocidas del modelo
8. OPTIMIZACIONES ESPEC√çFICAS para la especialidad "${especialidad}"
9. T√âCNICAS DE MEJORA DE PERFORMANCE espec√≠ficas del modelo
10. PREDICCI√ìN DE CALIDAD Y EFECTIVIDAD del prompt resultante

RESPONDE en formato JSON con esta estructura COMPLETA y DETALLADA:
{
  "estructura_recomendada": "Descripci√≥n exhaustiva de la estructura ideal para maximizar el rendimiento del modelo ${modelo} en la especialidad ${especialidad}",
  "elementos_clave": ["Elementos cr√≠ticos espec√≠ficos que debe contener el prompt"],
  "complejidad": "baja|media|alta",
  "necesita_ejemplos": true/false,
  "tipo_ejemplos": "Descripci√≥n del tipo de ejemplos m√°s efectivos para este modelo",
  "necesita_contexto_especializado": true/false,
  "contexto_especializado": "Detalles del contexto especializado requerido",
  "formato_optimo": "Descripci√≥n detallada del formato de salida m√°s efectivo para este modelo",
  "ventana_contexto": "An√°lisis espec√≠fico de limitaciones/ventajas de tokens para este modelo",
  "fortalezas_modelo": ["Fortalezas espec√≠ficas del modelo a aprovechar"],
  "limitaciones_modelo": ["Limitaciones cr√≠ticas del modelo a evitar"],
  "consideraciones_especiales": ["Consideraciones √∫nicas para este modelo"],
  "mejores_practicas": ["Mejores pr√°cticas espec√≠ficas para este modelo"],
  "estrategias_optimizacion": ["Estrategias avanzadas de optimizaci√≥n"],
  "metricas_calidad": "Predicci√≥n de efectividad y calidad esperada (1-10)",
  "riesgos_potenciales": ["Riesgos espec√≠ficos del modelo a mitigar"],
  "analisis_profundo": "Explicaci√≥n t√©cnica detallada del por qu√© de estas recomendaciones basada en la arquitectura y caracter√≠sticas espec√≠ficas del modelo ${modelo}"
}

IMPORTANTE: S√© espec√≠fico, t√©cnico y detallado. Aprovecha al m√°ximo tu conocimiento sobre el modelo "${modelo}" y la especialidad "${especialidad}".

Responde √öNICAMENTE en formato JSON v√°lido, SIN markdown, SIN backticks. Solo el objeto JSON puro.`;

    try {
      const response = await openai.chat.completions.create({
        model: "gpt-4o-mini",
        messages: [
          {
            role: "system",
            content: "Eres un experto en estructura de prompts con conocimiento profundo de GPT-4, Claude 3 Opus, Llama 3 y Gemini 1.5 Pro. Respondes siempre en formato JSON v√°lido con an√°lisis detallado basado en las caracter√≠sticas espec√≠ficas de cada modelo."
          },
          {
            role: "user", 
            content: prompt
          }
        ],
        temperature: 0.3,
        max_tokens: 1500
      });

      const respuesta = response.choices[0].message.content;
      
      // Limpiar la respuesta de markdown si est√° presente
      let jsonLimpio = respuesta;
      if (respuesta.includes('```json')) {
        jsonLimpio = respuesta.replace(/```json\s*/, '').replace(/\s*```$/, '');
      } else if (respuesta.includes('```')) {
        jsonLimpio = respuesta.replace(/```\s*/, '').replace(/\s*```$/, '');
      }
      
      return JSON.parse(jsonLimpio);

    } catch (error) {
      console.error('Error en Agente Estructurador:', error);
      console.error('Respuesta recibida:', response?.choices?.[0]?.message?.content);
      throw new Error(`Agente 1 fall√≥: ${error.message}`);
    }
  }
};